{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"important-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"aside\", {\n    class: _normalizeClass({\n      'collapsed': $data.isCollapsed\n    })\n  }, [_createCommentVNode(\" Toggle Button for Collapsing/Expanding \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleSidebar && $options.toggleSidebar(...args))\n  }, \"Important\"), _createCommentVNode(\" Important content, only visible when not collapsed \"), !$data.isCollapsed ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"Memo\", -1 /* HOISTED */)), _createCommentVNode(\" Textarea for memo input with character limit \"), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.memoContent = $event),\n    maxlength: \"200\",\n    placeholder: \"Write your memo here (max 200 characters)\",\n    onInput: _cache[2] || (_cache[2] = (...args) => $options.handleInput && $options.handleInput(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.memoContent]]), _createElementVNode(\"p\", null, _toDisplayString($data.memoContent.length) + \"/200 characters\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_normalizeClass","$data","isCollapsed","_createCommentVNode","_createElementVNode","onClick","_cache","args","$options","toggleSidebar","_hoisted_1","$event","memoContent","maxlength","placeholder","onInput","handleInput","_toDisplayString","length"],"sources":["E:\\UoB\\Software Engineering Project\\Ai Chatbot UI\\src\\components\\ImportantSidebar.vue"],"sourcesContent":["<template>\r\n  <aside :class=\"{'collapsed': isCollapsed}\">\r\n    <!-- Toggle Button for Collapsing/Expanding -->\r\n    <button @click=\"toggleSidebar\">Important</button>\r\n\r\n    <!-- Important content, only visible when not collapsed -->\r\n    <div v-if=\"!isCollapsed\" class=\"important-content\">\r\n      <h3>Memo</h3>\r\n\r\n      <!-- Textarea for memo input with character limit -->\r\n      <textarea\r\n          v-model=\"memoContent\"\r\n          maxlength=\"200\"\r\n          placeholder=\"Write your memo here (max 200 characters)\"\r\n          @input=\"handleInput\"\r\n      ></textarea>\r\n      <p>{{ memoContent.length }}/200 characters</p>\r\n    </div>\r\n  </aside>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      isCollapsed: false, // Controls the collapse state of the sidebar\r\n      memoContent: '', // Holds the content of the memo\r\n    };\r\n  },\r\n  methods: {\r\n    toggleSidebar() {\r\n      this.isCollapsed = !this.isCollapsed;\r\n    },\r\n    handleInput() {\r\n      // Any specific logic to handle input can be added here\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\naside {\r\n  width: 250px;\r\n  background-color: #f0f0f0;\r\n  padding: 10px;\r\n  transition: width 0.3s ease;\r\n  position: relative;\r\n}\r\n\r\n.collapsed {\r\n  width: 50px;\r\n}\r\n\r\nbutton {\r\n  margin: 5px 0;\r\n}\r\n\r\n.important-content {\r\n  margin-top: 10px;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 100px;\r\n  resize: none;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n  font-size: 14px;\r\n}\r\n\r\ntextarea:focus {\r\n  outline: none;\r\n}\r\n\r\np {\r\n  font-size: 12px;\r\n  color: gray;\r\n}\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;EAM6BC,KAAK,EAAC;;;uBALjCC,mBAAA,CAiBQ;IAjBAD,KAAK,EADfE,eAAA;MAAA,aAC+BC,KAAA,CAAAC;IAAW;MACtCC,mBAAA,4CAA+C,EAC/CC,mBAAA,CAAiD;IAAxCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;KAAE,WAAS,GAExCJ,mBAAA,wDAA2D,E,CAC/CF,KAAA,CAAAC,WAAW,I,cAAvBH,mBAAA,CAWM,OAXNW,UAWM,G,0BAVJN,mBAAA,CAAa,YAAT,MAAI,sBAERD,mBAAA,kDAAqD,E,gBACrDC,mBAAA,CAKY;IAflB,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAWmBV,KAAA,CAAAW,WAAW,GAAAD,MAAA;IACpBE,SAAS,EAAC,KAAK;IACfC,WAAW,EAAC,2CAA2C;IACtDC,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAQ,WAAA,IAAAR,QAAA,CAAAQ,WAAA,IAAAT,IAAA,CAAW;iEAHVN,KAAA,CAAAW,WAAW,E,GAKxBR,mBAAA,CAA8C,WAAAa,gBAAA,CAAxChB,KAAA,CAAAW,WAAW,CAACM,MAAM,IAAG,iBAAe,gB,KAhBhDf,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}