{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\",\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"chat-area\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Left Sidebar \"), _createElementVNode(\"aside\", {\n    class: _normalizeClass({\n      'collapsed': $data.isLeftCollapsed\n    })\n  }, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleLeftSidebar && $options.toggleLeftSidebar(...args))\n  }, \"History\"), !$data.isLeftCollapsed ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[9] || (_cache[9] = [_createElementVNode(\"p\", null, \"Previous conversations will be stored here\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */), _createCommentVNode(\" Main content (AI Interaction) \"), _createElementVNode(\"main\", null, [_createElementVNode(\"div\", _hoisted_3, [_cache[10] || (_cache[10] = _createElementVNode(\"p\", null, \"Welcome to \\\"AI Help\\\"!\", -1 /* HOISTED */)), _cache[11] || (_cache[11] = _createElementVNode(\"p\", null, \"Select two topics below:\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.startTopic('First Time Coming to University'))\n  }, \"First Time Coming to University\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.startTopic('Academic Inquiry'))\n  }, \"Academic Inquiry\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, msg => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: msg.id,\n      class: \"message\"\n    }, _toDisplayString(msg.content), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.userInput = $event),\n    onKeyup: _cache[4] || (_cache[4] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    placeholder: \"Type your message here...\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.userInput]])])]), _createCommentVNode(\" Right Sidebar (Settings) \"), _createElementVNode(\"aside\", {\n    class: _normalizeClass({\n      'collapsed': $data.isRightCollapsed\n    })\n  }, [_createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.toggleRightSidebar && $options.toggleRightSidebar(...args))\n  }, \"Settings\"), !$data.isRightCollapsed ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[12] || (_cache[12] = _createElementVNode(\"h3\", null, \"Settings\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.toggleTheme && $options.toggleTheme(...args))\n  }, \"Day/Night Mode\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.changeLanguage && $options.changeLanguage(...args))\n  }, \"Language\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.manageCookies && $options.manageCookies(...args))\n  }, \"Cookie Preferences\")])])])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */)]);\n}","map":{"version":3,"names":["id","class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_normalizeClass","$data","isLeftCollapsed","onClick","_cache","args","$options","toggleLeftSidebar","_hoisted_2","_hoisted_3","$event","startTopic","_Fragment","_renderList","messages","msg","content","userInput","onKeyup","_withKeys","sendMessage","placeholder","isRightCollapsed","toggleRightSidebar","_hoisted_4","toggleTheme","changeLanguage","manageCookies"],"sources":["E:\\UoB\\Software Engineering Project\\Ai Chatbot UI\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" class=\"app-container\">\n    <!-- Left Sidebar -->\n    <aside :class=\"{'collapsed': isLeftCollapsed}\">\n      <button @click=\"toggleLeftSidebar\">History</button>\n      <div v-if=\"!isLeftCollapsed\">\n        <p>Previous conversations will be stored here</p>\n      </div>\n    </aside>\n\n    <!-- Main content (AI Interaction) -->\n    <main>\n      <div class=\"chat-area\">\n        <p>Welcome to \"AI Help\"!</p>\n        <p>Select two topics below:</p>\n        <button @click=\"startTopic('First Time Coming to University')\">First Time Coming to University</button>\n        <button @click=\"startTopic('Academic Inquiry')\">Academic Inquiry</button>\n        <div v-for=\"msg in messages\" :key=\"msg.id\" class=\"message\">{{ msg.content }}</div>\n        <input v-model=\"userInput\" @keyup.enter=\"sendMessage\" placeholder=\"Type your message here...\" />\n      </div>\n    </main>\n\n    <!-- Right Sidebar (Settings) -->\n    <aside :class=\"{'collapsed': isRightCollapsed}\">\n      <button @click=\"toggleRightSidebar\">Settings</button>\n      <div v-if=\"!isRightCollapsed\">\n        <h3>Settings</h3>\n        <ul>\n          <li><button @click=\"toggleTheme\">Day/Night Mode</button></li>\n          <li><button @click=\"changeLanguage\">Language</button></li>\n          <li><button @click=\"manageCookies\">Cookie Preferences</button></li>\n        </ul>\n      </div>\n    </aside>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      isLeftCollapsed: false,\n      isRightCollapsed: false,\n      userInput: '',\n      messages: [],\n    };\n  },\n  methods: {\n    toggleLeftSidebar() {\n      this.isLeftCollapsed = !this.isLeftCollapsed;\n    },\n    toggleRightSidebar() {\n      this.isRightCollapsed = !this.isRightCollapsed;\n    },\n    startTopic(topic) {\n      this.messages.push({ id: Date.now(), content: `Selected topic: ${topic}` });\n    },\n    sendMessage() {\n      if (this.userInput.trim()) {\n        this.messages.push({ id: Date.now(), content: `You: ${this.userInput}` });\n        this.userInput = '';  // Clear input field after sending message\n      }\n    },\n    toggleTheme() {\n      // Logic to toggle between day and night mode\n      alert('Toggling Day/Night Mode');\n    },\n    changeLanguage() {\n      // Logic to change language\n      alert('Language change triggered');\n    },\n    manageCookies() {\n      // Logic to manage cookies\n      alert('Managing cookies');\n    },\n  },\n};\n</script>\n\n<style>\n.app-container {\n  display: flex;\n  height: 100vh;\n}\n\naside {\n  width: 250px;\n  background-color: #f0f0f0;\n  padding: 10px;\n  transition: width 0.3s ease;\n}\n\naside.collapsed {\n  width: 50px;\n}\n\nmain {\n  flex-grow: 1;\n  padding: 20px;\n}\n\n.chat-area {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 5px;\n}\n\n.message {\n  margin: 10px 0;\n}\n\ninput {\n  width: 100%;\n  padding: 10px;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}