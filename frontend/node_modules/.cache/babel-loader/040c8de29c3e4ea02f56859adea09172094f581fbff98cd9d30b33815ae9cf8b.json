{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      isLeftCollapsed: false,\n      isRightCollapsed: false,\n      userInput: '',\n      messages: []\n    };\n  },\n  methods: {\n    toggleLeftSidebar() {\n      this.isLeftCollapsed = !this.isLeftCollapsed;\n    },\n    toggleRightSidebar() {\n      this.isRightCollapsed = !this.isRightCollapsed;\n    },\n    startTopic(topic) {\n      this.messages.push({\n        id: Date.now(),\n        content: `Selected topic: ${topic}`\n      });\n    },\n    sendMessage() {\n      if (this.userInput.trim()) {\n        this.messages.push({\n          id: Date.now(),\n          content: `You: ${this.userInput}`\n        });\n        this.userInput = ''; // Clear input field after sending message\n      }\n    },\n    toggleTheme() {\n      // Logic to toggle between day and night mode\n      alert('Toggling Day/Night Mode');\n    },\n    changeLanguage() {\n      // Logic to change language\n      alert('Language change triggered');\n    },\n    manageCookies() {\n      // Logic to manage cookies\n      alert('Managing cookies');\n    }\n  }\n};","map":{"version":3,"names":["data","isLeftCollapsed","isRightCollapsed","userInput","messages","methods","toggleLeftSidebar","toggleRightSidebar","startTopic","topic","push","id","Date","now","content","sendMessage","trim","toggleTheme","alert","changeLanguage","manageCookies"],"sources":["E:\\UoB\\Software Engineering Project\\Ai Chatbot UI\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" class=\"app-container\">\n    <!-- Left Sidebar -->\n    <aside :class=\"{'collapsed': isLeftCollapsed}\">\n      <button @click=\"toggleLeftSidebar\">History</button>\n      <div v-if=\"!isLeftCollapsed\">\n        <p>Previous conversations will be stored here</p>\n      </div>\n    </aside>\n\n    <!-- Main content (AI Interaction) -->\n    <main>\n      <div class=\"chat-area\">\n        <p>Welcome to \"AI Help\"!</p>\n        <p>Select two topics below:</p>\n        <button @click=\"startTopic('First Time Coming to University')\">First Time Coming to University</button>\n        <button @click=\"startTopic('Academic Inquiry')\">Academic Inquiry</button>\n        <div v-for=\"msg in messages\" :key=\"msg.id\" class=\"message\">{{ msg.content }}</div>\n        <input v-model=\"userInput\" @keyup.enter=\"sendMessage\" placeholder=\"Type your message here...\" />\n      </div>\n    </main>\n\n    <!-- Right Sidebar (Settings) -->\n    <aside :class=\"{'collapsed': isRightCollapsed}\">\n      <button @click=\"toggleRightSidebar\">Settings</button>\n      <div v-if=\"!isRightCollapsed\">\n        <h3>Settings</h3>\n        <ul>\n          <li><button @click=\"toggleTheme\">Day/Night Mode</button></li>\n          <li><button @click=\"changeLanguage\">Language</button></li>\n          <li><button @click=\"manageCookies\">Cookie Preferences</button></li>\n        </ul>\n      </div>\n    </aside>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      isLeftCollapsed: false,\n      isRightCollapsed: false,\n      userInput: '',\n      messages: [],\n    };\n  },\n  methods: {\n    toggleLeftSidebar() {\n      this.isLeftCollapsed = !this.isLeftCollapsed;\n    },\n    toggleRightSidebar() {\n      this.isRightCollapsed = !this.isRightCollapsed;\n    },\n    startTopic(topic) {\n      this.messages.push({ id: Date.now(), content: `Selected topic: ${topic}` });\n    },\n    sendMessage() {\n      if (this.userInput.trim()) {\n        this.messages.push({ id: Date.now(), content: `You: ${this.userInput}` });\n        this.userInput = '';  // Clear input field after sending message\n      }\n    },\n    toggleTheme() {\n      // Logic to toggle between day and night mode\n      alert('Toggling Day/Night Mode');\n    },\n    changeLanguage() {\n      // Logic to change language\n      alert('Language change triggered');\n    },\n    manageCookies() {\n      // Logic to manage cookies\n      alert('Managing cookies');\n    },\n  },\n};\n</script>\n\n<style>\n.app-container {\n  display: flex;\n  height: 100vh;\n}\n\naside {\n  width: 250px;\n  background-color: #f0f0f0;\n  padding: 10px;\n  transition: width 0.3s ease;\n}\n\naside.collapsed {\n  width: 50px;\n}\n\nmain {\n  flex-grow: 1;\n  padding: 20px;\n}\n\n.chat-area {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 5px;\n}\n\n.message {\n  margin: 10px 0;\n}\n\ninput {\n  width: 100%;\n  padding: 10px;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";AAsCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,KAAK;MACtBC,gBAAgB,EAAE,KAAK;MACvBC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACL,eAAc,GAAI,CAAC,IAAI,CAACA,eAAe;IAC9C,CAAC;IACDM,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACL,gBAAe,GAAI,CAAC,IAAI,CAACA,gBAAgB;IAChD,CAAC;IACDM,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAI,CAACL,QAAQ,CAACM,IAAI,CAAC;QAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAEC,OAAO,EAAE,mBAAmBL,KAAK;MAAG,CAAC,CAAC;IAC7E,CAAC;IACDM,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACZ,SAAS,CAACa,IAAI,CAAC,CAAC,EAAE;QACzB,IAAI,CAACZ,QAAQ,CAACM,IAAI,CAAC;UAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UAAEC,OAAO,EAAE,QAAQ,IAAI,CAACX,SAAS;QAAG,CAAC,CAAC;QACzE,IAAI,CAACA,SAAQ,GAAI,EAAE,EAAG;MACxB;IACF,CAAC;IACDc,WAAWA,CAAA,EAAG;MACZ;MACAC,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf;MACAD,KAAK,CAAC,2BAA2B,CAAC;IACpC,CAAC;IACDE,aAAaA,CAAA,EAAG;MACd;MACAF,KAAK,CAAC,kBAAkB,CAAC;IAC3B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}