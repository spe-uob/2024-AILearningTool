{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"history-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"aside\", {\n    class: _normalizeClass({\n      'collapsed': $data.isCollapsed\n    })\n  }, [_createCommentVNode(\" Toggle Button for Collapsing/Expanding \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleSidebar && $options.toggleSidebar(...args))\n  }, \"History\"), _createCommentVNode(\" History content, only visible when not collapsed \"), !$data.isCollapsed ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"Conversation History\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.conversations, (conversation, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(conversation), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Button for adding a new conversation \"), _createElementVNode(\"button\", {\n    class: \"new-conversation-btn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addConversation && $options.addConversation(...args))\n  }, \"➕ New Conversation\")])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_normalizeClass","$data","isCollapsed","_createCommentVNode","_createElementVNode","onClick","_cache","args","$options","toggleSidebar","_hoisted_1","_Fragment","_renderList","conversations","conversation","index","_toDisplayString","addConversation"],"sources":["E:\\UoB\\Software Engineering Project\\Ai Chatbot UI\\src\\components\\HistorySidebar.vue"],"sourcesContent":["<template>\r\n  <aside :class=\"{'collapsed': isCollapsed}\">\r\n    <!-- Toggle Button for Collapsing/Expanding -->\r\n    <button @click=\"toggleSidebar\">History</button>\r\n\r\n    <!-- History content, only visible when not collapsed -->\r\n    <div v-if=\"!isCollapsed\" class=\"history-content\">\r\n      <h3>Conversation History</h3>\r\n      <ul>\r\n        <li v-for=\"(conversation, index) in conversations\" :key=\"index\">{{ conversation }}</li>\r\n      </ul>\r\n\r\n      <!-- Button for adding a new conversation -->\r\n      <button class=\"new-conversation-btn\" @click=\"addConversation\">➕ New Conversation</button>\r\n    </div>\r\n  </aside>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      isCollapsed: false,  // Controls the collapse state of the sidebar\r\n      conversations: ['Conversation 1'],  // Example list of conversations\r\n    };\r\n  },\r\n  methods: {\r\n    toggleSidebar() {\r\n      this.isCollapsed = !this.isCollapsed;\r\n    },\r\n    addConversation() {\r\n      const newConversation = `Conversation ${this.conversations.length + 1}`;\r\n      this.conversations.push(newConversation);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\naside {\r\n  width: 250px;\r\n  background-color: #f0f0f0;\r\n  padding: 10px;\r\n  transition: width 0.3s ease;\r\n  position: relative;\r\n}\r\n\r\n.collapsed {\r\n  width: 50px;\r\n}\r\n\r\nbutton {\r\n  margin: 5px 0;\r\n}\r\n\r\n.history-content {\r\n  margin-top: 10px;\r\n}\r\n\r\n.new-conversation-btn {\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;EAM6BC,KAAK,EAAC;;;uBALjCC,mBAAA,CAcQ;IAdAD,KAAK,EADfE,eAAA;MAAA,aAC+BC,KAAA,CAAAC;IAAW;MACtCC,mBAAA,4CAA+C,EAC/CC,mBAAA,CAA+C;IAAtCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;KAAE,SAAO,GAEtCJ,mBAAA,sDAAyD,E,CAC7CF,KAAA,CAAAC,WAAW,I,cAAvBH,mBAAA,CAQM,OARNW,UAQM,G,0BAPJN,mBAAA,CAA6B,YAAzB,sBAAoB,sBACxBA,mBAAA,CAEK,c,kBADHL,mBAAA,CAAuFY,SAAA,QAT/FC,WAAA,CAS4CX,KAAA,CAAAY,aAAa,EATzD,CASoBC,YAAY,EAAEC,KAAK;yBAA/BhB,mBAAA,CAAuF;MAAnCF,GAAG,EAAEkB;IAAK,GAAAC,gBAAA,CAAKF,YAAY;oCAGjFX,mBAAA,0CAA6C,EAC7CC,mBAAA,CAAyF;IAAjFN,KAAK,EAAC,sBAAsB;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAS,eAAA,IAAAT,QAAA,CAAAS,eAAA,IAAAV,IAAA,CAAe;KAAE,oBAAkB,E,KAbtFJ,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}