{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal-overlay\"\n};\nconst _hoisted_2 = {\n  class: \"modal-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"aside\", null, [_createCommentVNode(\" Setting button at the bottom \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.openSettings && $options.openSettings(...args))\n  }, \"⚙️ Setting\"), _createCommentVNode(\" Modal for settings \"), $data.isSettingsOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"Settings\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"h4\", null, \"1) Day/Night Mode\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.toggleTheme && $options.toggleTheme(...args))\n  }, \"Toggle Day/Night\")]), _createElementVNode(\"li\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"h4\", null, \"2) Language\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.changeLanguage && $options.changeLanguage(...args))\n  }, \"Change Language\")]), _createElementVNode(\"li\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"h4\", null, \"3) Cookie\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.deleteCookies && $options.deleteCookies(...args))\n  }, \"Delete All User Information\")])]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.closeSettings && $options.closeSettings(...args)),\n    class: \"close-btn\"\n  }, \"Close\")])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_createCommentVNode","_createElementVNode","onClick","_cache","args","$options","openSettings","$data","isSettingsOpen","_hoisted_1","_hoisted_2","toggleTheme","changeLanguage","deleteCookies","closeSettings"],"sources":["E:\\UoB\\Software Engineering Project\\Ai Chatbot UI\\src\\components\\SettingSidebar.vue"],"sourcesContent":["<template>\r\n  <aside>\r\n    <!-- Setting button at the bottom -->\r\n    <button @click=\"openSettings\">⚙️ Setting</button>\r\n\r\n    <!-- Modal for settings -->\r\n    <div v-if=\"isSettingsOpen\" class=\"modal-overlay\">\r\n      <div class=\"modal-content\">\r\n        <h3>Settings</h3>\r\n        <ul>\r\n          <li>\r\n            <h4>1) Day/Night Mode</h4>\r\n            <button @click=\"toggleTheme\">Toggle Day/Night</button>\r\n          </li>\r\n          <li>\r\n            <h4>2) Language</h4>\r\n            <button @click=\"changeLanguage\">Change Language</button>\r\n          </li>\r\n          <li>\r\n            <h4>3) Cookie</h4>\r\n            <button @click=\"deleteCookies\">Delete All User Information</button>\r\n          </li>\r\n        </ul>\r\n        <button @click=\"closeSettings\" class=\"close-btn\">Close</button>\r\n      </div>\r\n    </div>\r\n  </aside>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      isSettingsOpen: false,\r\n    };\r\n  },\r\n  methods: {\r\n    openSettings() {\r\n      this.isSettingsOpen = true;\r\n    },\r\n    closeSettings() {\r\n      this.isSettingsOpen = false;\r\n    },\r\n    toggleTheme() {\r\n      alert('Day/Night Mode toggled');\r\n    },\r\n    changeLanguage() {\r\n      alert('Language change triggered');\r\n    },\r\n    deleteCookies() {\r\n      alert('All user information deleted');\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Sidebar settings button */\r\naside {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  left: 10px;\r\n}\r\n\r\n/* Modal styles */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 300px;\r\n  max-width: 90%;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.close-btn {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  background-color: #f44336;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;EAM+BC,KAAK,EAAC;;;EAC1BA,KAAK,EAAC;AAAe;;uBAN9BC,mBAAA,CAyBQ,gBAxBNC,mBAAA,kCAAqC,EACrCC,mBAAA,CAAiD;IAAxCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;KAAE,YAAU,GAExCJ,mBAAA,wBAA2B,EAChBO,KAAA,CAAAC,cAAc,I,cAAzBT,mBAAA,CAmBM,OAnBNU,UAmBM,GAlBJR,mBAAA,CAiBM,OAjBNS,UAiBM,G,0BAhBJT,mBAAA,CAAiB,YAAb,UAAQ,sBACZA,mBAAA,CAaK,aAZHA,mBAAA,CAGK,a,0BAFHA,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAAsD;IAA7CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAM,WAAA,IAAAN,QAAA,CAAAM,WAAA,IAAAP,IAAA,CAAW;KAAE,kBAAgB,E,GAE/CH,mBAAA,CAGK,a,0BAFHA,mBAAA,CAAoB,YAAhB,aAAW,sBACfA,mBAAA,CAAwD;IAA/CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAO,cAAA,IAAAP,QAAA,CAAAO,cAAA,IAAAR,IAAA,CAAc;KAAE,iBAAe,E,GAEjDH,mBAAA,CAGK,a,0BAFHA,mBAAA,CAAkB,YAAd,WAAS,sBACbA,mBAAA,CAAmE;IAA1DC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAQ,aAAA,IAAAR,QAAA,CAAAQ,aAAA,IAAAT,IAAA,CAAa;KAAE,6BAA2B,E,KAG9DH,mBAAA,CAA+D;IAAtDC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAS,aAAA,IAAAT,QAAA,CAAAS,aAAA,IAAAV,IAAA,CAAa;IAAEN,KAAK,EAAC;KAAY,OAAK,E,OAvB9DE,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}