{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"aside\", {\n    class: _normalizeClass({\n      'disabled': $props.isDisabled\n    })\n  }, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleSidebar && $options.toggleSidebar(...args))\n  }, \"Important\"), !$data.isCollapsed && !$props.isDisabled ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"Memo\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.memoContent = $event),\n    placeholder: \"Write your memo here \",\n    onInput: _cache[2] || (_cache[2] = (...args) => $options.handleInput && $options.handleInput(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.memoContent]]), _createElementVNode(\"p\", null, _toDisplayString($data.memoContent.length) + \"/200 characters\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n}","map":{"version":3,"names":["key","_createElementBlock","class","_normalizeClass","$props","isDisabled","_createElementVNode","onClick","_cache","args","$options","toggleSidebar","$data","isCollapsed","_hoisted_1","$event","memoContent","placeholder","onInput","handleInput","_toDisplayString","length","_createCommentVNode"],"sources":["E:\\UoB\\Software Engineering Project\\Ai Chatbot UI\\src\\components\\ImportantSidebar.vue"],"sourcesContent":["<template>\r\n  <aside :class=\"{'disabled': isDisabled}\">\r\n    <button @click=\"toggleSidebar\">Important</button>\r\n    <div v-if=\"!isCollapsed && !isDisabled\">\r\n      <h3>Memo</h3>\r\n      <textarea\r\n          v-model=\"memoContent\"\r\n          placeholder=\"Write your memo here \"\r\n          @input=\"handleInput\"\r\n      ></textarea>\r\n      <p>{{ memoContent.length }}/200 characters</p>\r\n    </div>\r\n  </aside>\r\n</template>\r\n\r\n<script>\r\nexport default\r\n{\r\n    props: {\r\n     isDisabled: {\r\n        type: Boolean,\r\n        default: false,\r\n     },\r\n   },\r\n    data() {\r\n      return {\r\n        isCollapsed: false,\r\n        memoContent: '',\r\n     };\r\n    },\r\n   methods: {\r\n     toggleSidebar() {\r\n       this.isCollapsed = !this.isCollapsed;\r\n      },\r\n      handleInput() {\r\n       // Handle input if necessary\r\n     },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\naside {\r\n  width: 250px;\r\n  background-color: #f0f0f0;\r\n  padding: 10px;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.disabled {\r\n  pointer-events: none;\r\n  opacity: 0.5;\r\n}\r\n\r\n.collapsed {\r\n  width: 50px;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 100px;\r\n  resize: none;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n  font-size: 14px;\r\n}\r\n\r\ntextarea:focus {\r\n  outline: none;\r\n}\r\n\r\np {\r\n  font-size: 12px;\r\n  color: gray;\r\n}\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAWQ;IAXAC,KAAK,EADfC,eAAA;MAAA,YAC8BC,MAAA,CAAAC;IAAU;MACpCC,mBAAA,CAAiD;IAAxCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;KAAE,WAAS,G,CAC5BG,KAAA,CAAAC,WAAW,KAAKT,MAAA,CAAAC,UAAU,I,cAAtCJ,mBAAA,CAQM,OAXVa,UAAA,G,0BAIMR,mBAAA,CAAa,YAAT,MAAI,sB,gBACRA,mBAAA,CAIY;IATlB,uBAAAE,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAMmBH,KAAA,CAAAI,WAAW,GAAAD,MAAA;IACpBE,WAAW,EAAC,uBAAuB;IAClCC,OAAK,EAAAV,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAS,WAAA,IAAAT,QAAA,CAAAS,WAAA,IAAAV,IAAA,CAAW;iEAFVG,KAAA,CAAAI,WAAW,E,GAIxBV,mBAAA,CAA8C,WAAAc,gBAAA,CAAxCR,KAAA,CAAAI,WAAW,CAACK,MAAM,IAAG,iBAAe,gB,KAVhDC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}